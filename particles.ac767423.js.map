{"version":3,"sources":["draw-force.js","Particle.js","Knob.js","UI.js","Field.js","index.js"],"names":["DrawForceController","canvasContext","func","_onChange","e","startPoint","x","offsetX","y","offsetY","endPoint","state","down","canvas","addEventListener","onMouseDown","onMouseUp","onMouseMove","strokeStyle","beginPath","moveTo","lineTo","stroke","Particle","startPosition","_onDelete","position","force","acceleration","velocity","mass","seeds","Math","random","config","lifespan","autonomy","size","life","context","gravity","wind","seed","radian","PI","lifeRadians","horizontalMult","sinMult","sin","timestamp","lastTime","i","dimension","getWobble","Infinity","opacity","max","fillStyle","width","fillRect","destroy","height","Knob","HAS_TOUCH","window","applyStyles","elem","styles","Object","entries","key","val","style","notchStyles","display","backgroundColor","transition","toDegrees","toRadians","degree","getCoord","evt","coord","touches","within","min","nearestFromSet","num","set","lastItem","index","item","undefined","abs","length","createNotches","spinner","degrees","forEach","notchPosition","cos","notchElem","document","createElement","classList","add","left","top","transform","appendChild","setTimeout","roundTo","to","round","degreeToValue","deg","DEGREES_DEAD_AREA","offset","newDeg","valueToDegree","selector","notchesCount","notches","deadArea","inner","firstChild","degreeInterval","degreesSet","degreesStart","notch","push","reverse","sort","a","b","lastDeg","active","onRelease","remove","body","rotate","onMove","getCoordForElement","preventDefault","center","offsetLeft","offsetWidth","offsetTop","offsetHeight","diffX","diffY","arctan","atan2","roundDeg","navigator","vibrate","onGrab","setValue","onChange","INITIAL_VALUES","intensity","init","fieldInstance","getElementById","_val","setConfig","Field","keyVal","particleConfig","particles","particle","innerWidth","innerHeight","getBoundingClientRect","getContext","Set","emitting","clearRect","update","setGravity","setWind","stop","start","setContext","onDelete","delete","startParticles","addParticle","interval","timeout","clearTimeout","field","drawController","updateForces","debounce","timer","args","onResize","loop","requestAnimationFrame"],"mappings":"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","file":"particles.ac767423.js","sourceRoot":"..","sourcesContent":["export class DrawForceController {\n  constructor(canvasContext){\n    this.canvasContext = canvasContext\n    this.canvasContext.canvas.addEventListener('mousedown', this.onMouseDown)\n    this.canvasContext.canvas.addEventListener('mouseup', this.onMouseUp)\n    this.canvasContext.canvas.addEventListener('mousemove', this.onMouseMove)\n\n    this.state = {\n      down: false\n    }\n\n    this._onChange = () => {}\n  }\n\n  onChange = (func) => {\n    this._onChange = func\n  }\n\n  onMouseDown = (e) => {\n    this.startPoint = {x: e.offsetX, y: e.offsetY}\n    this.endPoint = {x: e.offsetX, y: e.offsetY}\n    this.state.down = true\n  }\n  \n  onMouseUp = (e) => {\n    if (!this.state.down) return\n    this.state.down = false\n    this.endPoint = {x: e.offsetX, y: e.offsetY}\n\n    this._onChange(\n      this.endPoint.x - this.startPoint.x,\n      this.endPoint.y - this.startPoint.y,\n    )\n  }\n\n  onMouseMove = (e) => {\n    if (this.state.down) {\n      this.endPoint = {x: e.offsetX, y: e.offsetY}\n    }\n  }\n\n  update() {\n    if (this.state.down) {\n      this.canvasContext.strokeStyle = 'red'\n      this.canvasContext.beginPath()\n      this.canvasContext.moveTo(this.startPoint.x, this.startPoint.y)\n      this.canvasContext.lineTo(this.endPoint.x, this.endPoint.y)\n      this.canvasContext.stroke();\n    }\n  }\n}","export class Particle {\n  constructor({\n    startPosition\n  }){\n    this.position = { ...startPosition}\n    this.force = {\n      x: 0,\n      y: 0,\n    }\n    this.acceleration = {\n      x: 0,\n      y: 0,\n    }\n    this.velocity = {\n      x: 0,\n      y: 0,\n    }\n\n    this.mass = 0.1\n\n    this.seeds = [ Math.random(), Math.random(), Math.random(), Math.random(), Math.random() ]\n\n    this.config = {\n      lifespan: 500,\n      autonomy: 1,\n      size: 5,\n    }\n\n\n    this.life = 0\n\n    this._onDelete = () => {}\n  }\n\n  setContext(context){\n    this.context = context\n  }\n\n  setGravity(gravity){\n    this.force.y = gravity\n  }\n\n  setWind(wind){\n    this.force.x = wind\n  }\n\n  setConfig(config){\n    this.config = config\n  }\n\n  getWobble(seed = 0){\n    // wobbles\n    const radian = Math.PI / 180\n    const lifeRadians = (this.life) * radian * this.seeds[seed] // add random so it appears at a random place in the sine curve\n    const horizontalMult = 0.5 * this.seeds[seed]\n    const sinMult = 10 * this.seeds[seed]\n    return (horizontalMult * Math.sin(lifeRadians * sinMult))\n  }\n\n  onDelete = (func) => {\n    this._onDelete = func\n  }\n\n  destroy(){\n    this._onDelete(this)\n    delete this\n  }\n\n  update(timestamp){\n    this.life += 1\n    this.lastTime = timestamp\n    \n    // todo: only update this if changed from last tick\n    this.acceleration = {\n      x: this.force.x * this.mass,\n      y: this.force.y * this.mass,\n    }\n\n    for (let i  = 0; i < this.config.autonomy; i++) {\n      let dimension = i % 2 === 0 ? 'x' : 'y'\n      this.position[dimension] += (this.getWobble(i) * (this.config.autonomy + 1))\n    }\n    // this.acceleration.x += this.getWob\n    // gravity-based\n    \n    this.velocity = {\n      x: this.life * this.acceleration.x,\n      y: this.life * this.acceleration.y\n    }\n    \n\n    this.position.x += this.velocity.x\n    this.position.y += this.velocity.y\n\n\n    // draw\n    // this.context.fillStyle = 'black'\n    if (this.config.lifespan < Infinity) {\n      const opacity = Math.max((this.config.lifespan - this.life) / this.config.lifespan, 0)\n      this.context.fillStyle = `rgba(0, 0, 0, ${opacity})`\n    }\n    else {\n      this.context.fillStyle = `rgba(0, 0, 0, 1)`\n    }\n    const width = this.config.size * this.seeds[0]\n    this.context.fillRect(this.position.x, -this.position.y, width, width)\n    const canvas = this.context.canvas\n\n    // reset when OOB\n    if (this.life >= this.config.lifespan) {\n      this.destroy()\n    }\n    if (this.force.y < 0) {\n      if (this.position.y <= -canvas.height) {\n        this.destroy()\n      }\n    }\n    else if (this.force.y > 0) {\n      if (this.position.y >= 0) {\n        this.destroy()\n      }\n    }\n    if (this.force.x >= 0) {\n      if (this.position.x >= canvas.width) {\n        this.position.x = 0\n      }\n    }\n    if (this.force.x < 0) {\n      if (this.position.x <= 0) {\n        this.position.x = canvas.width\n      }\n    }\n  }\n}","/*\n  https://raw.githubusercontent.com/nickells/knob/master/script.js\n*/\n\nconst HAS_TOUCH = 'ontouchstart' in window\n\nfunction applyStyles(elem, styles) {\n  for (let [key, val] of Object.entries(styles)) {\n    elem.style[key] = val\n  }\n}\n\nconst notchStyles = {\n  position: 'absolute',\n  width: '6px',\n  height: '1px',\n  display: 'inline-block',\n  backgroundColor: 'grey',\n  transition: `transform 500ms`\n}\n\nconst toDegrees = radian => radian * (180 / Math.PI)\n\nconst toRadians = degree => degree * (Math.PI / 180)\n\nfunction getCoord(evt) {\n  return val => {\n    let coord = val === 'X' ? 'clientX' : 'clientY'\n    return HAS_TOUCH ? evt.touches[0][coord] : evt[coord]\n  }\n  // switch to screen if parent has unknown width?\n}\n\nfunction within(val, min, max) {\n  return val >= min && val <= max\n}\n\nfunction nearestFromSet(num, set) {\n  let lastItem\n  for (let [index, item] of set.entries()) {\n    if (num === item) return item\n    else if (lastItem === undefined && num < item) {\n      return item\n    } else if (num > lastItem && num < item) {\n      return Math.abs(num - lastItem) > Math.abs(num - item) ? item : lastItem\n    } else if (index === set.length - 1) {\n      return item\n    }\n\n    lastItem = item\n  }\n}\n\n\nfunction createNotches(spinner, degrees) {\n  const radius = 25\n  const notch_offset = 15\n\n  degrees.forEach((degree, index) => {\n    degree -= 180\n    let notchPosition = {\n      x: (radius + notch_offset) * Math.cos(toRadians(degree)) + radius - 3,\n      y: (radius + notch_offset) * Math.sin(toRadians(degree)) + radius - 0\n    }\n    const notchElem = document.createElement('div')\n    notchElem.classList.add('notchElem')\n    applyStyles(notchElem, {\n      ...notchStyles,\n      left: `${notchPosition.x}px`,\n      top: `${notchPosition.y}px`,\n      transform: `rotate(${degree}deg) scale(0)`\n    })\n    spinner.appendChild(notchElem)\n    setTimeout(() => {\n      applyStyles(notchElem, {\n        transform: `rotate(${degree}deg) scale(1)`\n      })\n    }, index * 50)\n  })\n}\n\nfunction roundTo(num, to) {\n  return Math.round(num / to) * to\n}\n\nfunction degreeToValue(deg, DEGREES_DEAD_AREA, min, max) {\n  // calc offset\n  const offset = DEGREES_DEAD_AREA / 2\n  let newDeg = 360 - deg\n  if (newDeg < 90) newDeg += 360\n  newDeg = newDeg - 90 - offset\n  newDeg = newDeg / (360 - DEGREES_DEAD_AREA)\n  newDeg = min + (newDeg * (max - min))\n  return newDeg\n}\n\nfunction valueToDegree(val, DEGREES_DEAD_AREA, min, max) {\n  // calc offset\n  const offset = DEGREES_DEAD_AREA / 2\n  \n  // get degrees out of 360 (minus offset)\n  let deg = (val - min) / (max - min) * (360 - DEGREES_DEAD_AREA)\n  \n  // flip directions (and orientation)\n  deg = 270 - deg \n\n  // account for dead-area offset\n  deg -= offset\n\n  return deg\n}\n\nfunction Knob({ selector: elem, notches: notchesCount, min = 0, max = 100, deadArea: DEGREES_DEAD_AREA = 90 }) {\n  \n  let spinner = elem\n  let inner = elem.firstChild\n  let _onChange = () => {}\n\n  // if there is a dead zone, add 1 to notchescount to spread evenly. otherwise it will overlap at the 360 mark\n  const degreeInterval =\n    (360 - DEGREES_DEAD_AREA) /\n      (DEGREES_DEAD_AREA ? notchesCount - 1 : notchesCount) || 1\n\n  // create degrees to map to, and notches\n  const degreesSet = []\n  const degreesStart = 270 - DEGREES_DEAD_AREA / 2 // assume 360 degrees, and 0 is at 3:00 position (CCW), then move it to this new starting point\n  \n  for (let notch = 0; notch < notchesCount; notch++) {\n    let val = degreesStart - notch * degreeInterval\n    val = (val + 360) % 360\n    degreesSet.push(val)\n  }\n\n  // reverse the degree set so animation works\n  createNotches(spinner, degreesSet.reverse())\n\n  // sort the degree set so we can properly get the closest match algorithmically\n  degreesSet.sort((a, b) => a - b)\n\n  let lastDeg = 0,\n    active = false\n\n  function onRelease(e) {\n    if (active) {\n      spinner.classList.remove('is-active')\n      document.body.classList.remove('is-grabbing')\n      active = false\n    }\n  }\n\n  function rotate(deg) {\n    lastDeg = deg\n    // change degree to match CSS's interpretation of geometry\n    // and because the notch is vertical upon start\n    inner.style.transform = `rotate(${90 - deg}deg)`\n  }\n\n  function onMove(e) {\n    const getCoordForElement = getCoord(e)\n    e.preventDefault()\n    if (active) {\n      const center = {\n        x: spinner.offsetLeft + spinner.offsetWidth / 2,\n        y: spinner.offsetTop + spinner.offsetHeight / 2\n      }\n      let diffX = getCoordForElement('X') - center.x\n      let diffY = center.y - getCoordForElement('Y') // because Y is upside down from regular math\n      let arctan = Math.atan2(diffY, diffX)\n      let deg = (toDegrees(arctan) + 360) % 360\n      let roundDeg = nearestFromSet(deg, degreesSet)\n      if (Math.abs(roundDeg) === Math.abs(lastDeg)) return\n      else {\n        rotate(roundDeg)\n        navigator.vibrate && navigator.vibrate([50])\n        _onChange(degreeToValue(roundDeg, DEGREES_DEAD_AREA, min, max))\n      }\n    }\n  }\n\n  function onGrab(e) {\n    if (!active) {\n      active = true\n      spinner.classList.add('is-active')\n      document.body.classList.add('is-grabbing')\n      onMove(e)\n    }\n  }\n\n  spinner.addEventListener('mousedown', onGrab, false)\n  spinner.addEventListener('mousedown', onGrab, false)\n  spinner.addEventListener('touchstart', onGrab, false)\n  window.addEventListener('mouseup', onRelease, false)\n  window.addEventListener('touchend', onRelease, false)\n  window.addEventListener('mousemove', onMove, false)\n  window.addEventListener('touchmove', onMove, false)\n\n  return {\n    setValue(val) {\n      rotate(valueToDegree(val, DEGREES_DEAD_AREA, min, max))\n      return this\n    },\n    onChange(func) {\n      _onChange = func\n      return this\n    }\n  }\n}\n\nexport default Knob","import Knob from \"./Knob\"\n\nexport const INITIAL_VALUES = {\n  lifespan: 1620,\n  autonomy: 1,\n  size: 5,\n  intensity: 100,\n  gravity: -0.1,\n  wind: 0,\n}\n\nexport const init = (fieldInstance) => {\n  const lifespan = new Knob({\n    notches: 16,\n    min: 100,\n    max: 2000,\n    selector: document.getElementById('knob-1')\n  })\n  .setValue(INITIAL_VALUES.lifespan)\n  .onChange(val => {\n    let _val = Math.round(val)\n    fieldInstance.setConfig({\n      lifespan: _val === 2000 ? Infinity : _val\n    })\n  })\n  const autonomy = new Knob({\n    notches: 6,\n    min: 0,\n    max: 5,\n    selector: document.getElementById('knob-2')\n  })\n  .setValue(INITIAL_VALUES.autonomy)\n  .onChange(val => {\n    fieldInstance.setConfig({\n      autonomy: Math.round(val)\n    })\n  })\n  const size = new Knob({\n    notches: 8,\n    min: 2,\n    max: 9,\n    selector: document.getElementById('knob-3')\n  })\n  .setValue(INITIAL_VALUES.size)\n  .onChange(val => {\n    fieldInstance.setConfig({\n      size: Math.round(val)\n    })\n  })\n  const intensity = new Knob({\n    notches: 16,\n    min: 0,\n    max: 100,\n    selector: document.getElementById('knob-4')\n  })\n  .setValue(INITIAL_VALUES.intensity)\n  .onChange(val => {\n    fieldInstance.setConfig({\n      intensity: Math.round(val)\n    })\n  })\n}","import { Particle } from \"./Particle\"\nimport { INITIAL_VALUES } from \"./UI\"\n\nexport class Field {\n  constructor(){\n    this.canvas = document.createElement('canvas')\n    this.canvas.width = window.innerWidth\n    this.canvas.height = window.innerHeight - document.getElementById('hud').getBoundingClientRect().height\n    this.context = this.canvas.getContext('2d')\n    this.particles = new Set()\n    document.body.appendChild(this.canvas)\n\n    this.gravity = -0.1\n    this.wind = 0\n    \n    this.particleConfig = { ...INITIAL_VALUES }\n\n    this.emitting = false\n  }\n\n  update(timestamp){\n    this.context.clearRect(0, 0, this.canvas.width, this.canvas.height)\n    this.particles.forEach(particle => particle.update(timestamp))\n  }\n\n  setConfig = (keyVal) => {\n    this.particleConfig = {\n      ...this.particleConfig,\n      ...keyVal,\n    }\n    this.particles.forEach(particle => particle.setConfig(this.particleConfig))\n  }\n\n  updateForces(x, y){\n    const divisor = 1000\n    this.gravity = -y / divisor\n    this.wind = x / divisor\n    this.particles.forEach(particle => {\n      particle.setGravity(this.gravity)\n      particle.setWind(this.wind)\n    })\n\n    if (this.gravity === 0) {\n      this.stop()\n    } else if (!this.emitting) {\n      this.start()\n    }\n  }\n\n  addParticle(particle) {\n    particle.setContext(this.context)\n    particle.setGravity(this.gravity)\n    particle.setWind(this.wind)\n    particle.setConfig(this.particleConfig)\n    this.particles.add(particle)\n    particle.onDelete(particle => {\n      this.particles.delete(particle)\n    })\n  }\n\n  start(){\n    const startParticles = () => {\n      this.addParticle(new Particle({\n        startPosition: {\n          x: Math.random() * this.canvas.width,\n          y: this.gravity < 0 ? 1 : -(this.canvas.height - this.particleConfig.size)\n        }\n      }))\n      const interval = 100 - this.particleConfig.intensity\n      this.timeout = setTimeout(startParticles, interval)\n    }\n\n    startParticles()\n    this.emitting = true\n  }\n\n  onResize = () => {\n    this.canvas.width = window.innerWidth\n    this.canvas.height = window.innerHeight - document.getElementById('hud').getBoundingClientRect().height\n  }\n\n  stop(){\n    this.emitting = false\n    clearTimeout(this.timeout)\n  }\n}","/*\n  get gravity/wind into one config called forces\n  lifespan 100 pauses spawning\n  color?\n  blur?\n  animated favicon?\n  // embed + colors\n*/\n\nimport { DrawForceController } from \"./draw-force\"\nimport { Field } from \"./Field\"\nimport { init } from \"./UI\"\n\n\nconst field = new Field()\nconst drawController = new DrawForceController(field.context)\n\ndrawController.onChange((x, y) => {\n  field.updateForces(x, y)\n})\n\nfield.start()\n\nconst debounce = (func) => {\n  let timer\n  return (...args) => {\n    clearTimeout(timer)\n    timer = setTimeout(() => func(...args), 300)\n  }\n}\n\nwindow.addEventListener('resize', debounce(field.onResize))\n\nconst loop = (timestamp) => {\n  field.update(timestamp)\n  drawController.update()\n  requestAnimationFrame(loop)\n}\n\ninit(field)\n\nloop()\n\n"]}