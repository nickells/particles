{"version":3,"sources":["Knob.js","draw-force.js","Particle.js","UI.js","Field.js","index.js"],"names":["Knob","HAS_TOUCH","window","applyStyles","elem","styles","Object","entries","key","val","style","notchStyles","position","width","height","display","backgroundColor","transition","toDegrees","radian","Math","PI","toRadians","degree","getClientCoords","evt","x","touches","clientX","y","clientY","within","min","max","nearestFromSet","num","set","lastItem","index","item","undefined","abs","length","createNotches","spinner","degrees","forEach","notchPosition","cos","sin","notchElem","document","createElement","classList","add","left","top","transform","appendChild","setTimeout","roundTo","to","round","degreeToValue","deg","DEGREES_DEAD_AREA","offset","newDeg","valueToDegree","selector","notchesCount","notches","deadArea","inner","firstChild","_onChange","degreeInterval","degreesSet","degreesStart","notch","push","reverse","sort","a","b","lastDeg","active","onRelease","e","remove","body","rotate","onMove","preventDefault","center","offsetLeft","offsetWidth","offsetTop","offsetHeight","diffX","diffY","arctan","atan2","roundDeg","onGrab","addEventListener","passive","bubbles","setValue","onChange","func","DrawForceController","canvasContext","getCanvasCoords","startPoint","endPoint","state","down","canvasX","canvasY","target","canvas","onMouseDown","onMouseUp","onMouseMove","strokeStyle","beginPath","moveTo","lineTo","stroke","Particle","startPosition","_onDelete","force","acceleration","velocity","mass","seeds","random","config","lifespan","autonomy","size","life","context","gravity","wind","seed","lifeRadians","horizontalMult","sinMult","timestamp","lastTime","i","dimension","getWobble","Infinity","opacity","fillStyle","arc","fill","destroy","INITIAL_VALUES","intensity","init","fieldInstance","getElementById","_val","setConfig","Field","keyVal","particleConfig","particles","particle","innerWidth","innerHeight","getBoundingClientRect","devicePixelRatio","getContext","scale","Set","emitting","clearRect","update","setGravity","setWind","stop","start","setContext","onDelete","delete","startParticles","addParticle","interval","timeout","clearTimeout","field","drawController","updateForces","debounce","timer","args","onResize","loop","requestAnimationFrame"],"mappings":"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","file":"particles.a2ae5859.js","sourceRoot":"..","sourcesContent":["/*\n  https://raw.githubusercontent.com/nickells/knob/master/script.js\n*/\n\nconst HAS_TOUCH = 'ontouchstart' in window\n\nfunction applyStyles(elem, styles) {\n  for (let [key, val] of Object.entries(styles)) {\n    elem.style[key] = val\n  }\n}\n\nconst notchStyles = {\n  position: 'absolute',\n  width: '6px',\n  height: '1px',\n  display: 'inline-block',\n  backgroundColor: 'grey',\n  transition: `transform 500ms`\n}\n\nconst toDegrees = radian => radian * (180 / Math.PI)\n\nconst toRadians = degree => degree * (Math.PI / 180)\n\nexport function getClientCoords(evt) {\n  return HAS_TOUCH ? {\n    x: evt.touches[0].clientX,\n    y: evt.touches[0].clientY,\n  } : {\n    x: evt.clientX,\n    y: evt.clientY,\n  }\n}\n\nfunction within(val, min, max) {\n  return val >= min && val <= max\n}\n\nfunction nearestFromSet(num, set) {\n  let lastItem\n  for (let [index, item] of set.entries()) {\n    if (num === item) return item\n    else if (lastItem === undefined && num < item) {\n      return item\n    } else if (num > lastItem && num < item) {\n      return Math.abs(num - lastItem) > Math.abs(num - item) ? item : lastItem\n    } else if (index === set.length - 1) {\n      return item\n    }\n\n    lastItem = item\n  }\n}\n\n\nfunction createNotches(spinner, degrees) {\n  const radius = 25\n  const notch_offset = 15\n\n  degrees.forEach((degree, index) => {\n    degree -= 180\n    let notchPosition = {\n      x: (radius + notch_offset) * Math.cos(toRadians(degree)) + radius - 3,\n      y: (radius + notch_offset) * Math.sin(toRadians(degree)) + radius - 0\n    }\n    const notchElem = document.createElement('div')\n    notchElem.classList.add('notchElem')\n    applyStyles(notchElem, {\n      ...notchStyles,\n      left: `${notchPosition.x}px`,\n      top: `${notchPosition.y}px`,\n      transform: `rotate(${degree}deg) scale(0)`\n    })\n    spinner.appendChild(notchElem)\n    setTimeout(() => {\n      applyStyles(notchElem, {\n        transform: `rotate(${degree}deg) scale(1)`\n      })\n    }, index * 50)\n  })\n}\n\nfunction roundTo(num, to) {\n  return Math.round(num / to) * to\n}\n\nfunction degreeToValue(deg, DEGREES_DEAD_AREA, min, max) {\n  // calc offset\n  const offset = DEGREES_DEAD_AREA / 2\n  let newDeg = 360 - deg\n  if (newDeg < 90) newDeg += 360\n  newDeg = newDeg - 90 - offset\n  newDeg = newDeg / (360 - DEGREES_DEAD_AREA)\n  newDeg = min + (newDeg * (max - min))\n  return newDeg\n}\n\nfunction valueToDegree(val, DEGREES_DEAD_AREA, min, max) {\n  // calc offset\n  const offset = DEGREES_DEAD_AREA / 2\n  \n  // get degrees out of 360 (minus offset)\n  let deg = (val - min) / (max - min) * (360 - DEGREES_DEAD_AREA)\n  \n  // flip directions (and orientation)\n  deg = 270 - deg \n\n  // account for dead-area offset\n  deg -= offset\n\n  return deg\n}\n\nfunction Knob({ selector: elem, notches: notchesCount, min = 0, max = 100, deadArea: DEGREES_DEAD_AREA = 90 }) {\n  \n  let spinner = elem\n  let inner = elem.firstChild\n  let _onChange = () => {}\n\n  // if there is a dead zone, add 1 to notchescount to spread evenly. otherwise it will overlap at the 360 mark\n  const degreeInterval =\n    (360 - DEGREES_DEAD_AREA) /\n      (DEGREES_DEAD_AREA ? notchesCount - 1 : notchesCount) || 1\n\n  // create degrees to map to, and notches\n  const degreesSet = []\n  const degreesStart = 270 - DEGREES_DEAD_AREA / 2 // assume 360 degrees, and 0 is at 3:00 position (CCW), then move it to this new starting point\n  \n  for (let notch = 0; notch < notchesCount; notch++) {\n    let val = degreesStart - notch * degreeInterval\n    val = (val + 360) % 360\n    degreesSet.push(val)\n  }\n\n  // reverse the degree set so animation works\n  createNotches(spinner, degreesSet.reverse())\n\n  // sort the degree set so we can properly get the closest match algorithmically\n  degreesSet.sort((a, b) => a - b)\n\n  let lastDeg = 0,\n    active = false\n\n  function onRelease(e) {\n    if (active) {\n      spinner.classList.remove('is-active')\n      document.body.classList.remove('is-grabbing')\n      active = false\n    }\n  }\n\n  function rotate(deg) {\n    lastDeg = deg\n    // change degree to match CSS's interpretation of geometry\n    // and because the notch is vertical upon start\n    inner.style.transform = `rotate(${90 - deg}deg)`\n  }\n\n  function onMove(e) {\n    e.preventDefault()\n    if (active) {\n      const {x, y} = getClientCoords(e)\n      const center = {\n        x: spinner.offsetLeft + spinner.offsetWidth / 2,\n        y: spinner.offsetTop + spinner.offsetHeight / 2\n      }\n      let diffX = x - center.x\n      let diffY = center.y - y // because Y is upside down from regular math\n      let arctan = Math.atan2(diffY, diffX)\n      let deg = (toDegrees(arctan) + 360) % 360\n      let roundDeg = nearestFromSet(deg, degreesSet)\n      if (Math.abs(roundDeg) === Math.abs(lastDeg)) return\n      else {\n        rotate(roundDeg)\n        _onChange(degreeToValue(roundDeg, DEGREES_DEAD_AREA, min, max))\n      }\n    }\n  }\n\n  function onGrab(e) {\n    if (!active) {\n      active = true\n      spinner.classList.add('is-active')\n      document.body.classList.add('is-grabbing')\n      onMove(e)\n    }\n  }\n\n  spinner.addEventListener('mousedown', onGrab, {\n    passive: false,\n    bubbles: false\n  })\n  spinner.addEventListener('mousedown', onGrab, {\n    passive: false,\n    bubbles: false\n  })\n  spinner.addEventListener('touchstart', onGrab, {\n    passive: false,\n    bubbles: false\n  })\n  window.addEventListener('mouseup', onRelease, {\n    passive: false,\n    bubbles: false\n  })\n  window.addEventListener('touchend', onRelease, {\n    passive: false,\n    bubbles: false\n  })\n  window.addEventListener('mousemove', onMove, {\n    passive: false,\n    bubbles: false\n  })\n  window.addEventListener('touchmove', onMove, {\n    passive: false,\n    bubbles: false\n  })\n\n  return {\n    setValue(val) {\n      rotate(valueToDegree(val, DEGREES_DEAD_AREA, min, max))\n      return this\n    },\n    onChange(func) {\n      _onChange = func\n      return this\n    }\n  }\n}\n\nexport default Knob","import { getClientCoords } from \"./Knob\"\n\nexport class DrawForceController {\n  constructor(canvasContext){\n    this.canvasContext = canvasContext\n    this.canvasContext.canvas.addEventListener('mousedown', this.onMouseDown)\n    this.canvasContext.canvas.addEventListener('mouseup', this.onMouseUp)\n    this.canvasContext.canvas.addEventListener('mousemove', this.onMouseMove)\n    this.canvasContext.canvas.addEventListener('touchstart', this.onMouseDown)\n    this.canvasContext.canvas.addEventListener('touchend', this.onMouseUp)\n    this.canvasContext.canvas.addEventListener('touchmove', this.onMouseMove)\n\n    this.state = {\n      down: false\n    }\n\n    this._onChange = () => {}\n  }\n\n  onChange = (func) => {\n    this._onChange = func\n  }\n\n  onMouseDown = (e) => {\n    e.preventDefault();\n    const { x, y } = this.getCanvasCoords(e)\n    this.startPoint = {x, y}\n    this.endPoint = {x, y}\n    this.state.down = true\n  }\n  \n  onMouseUp = (e) => {\n    e.preventDefault();\n    if (!this.state.down) return\n    this.state.down = false\n\n    this._onChange(\n      this.endPoint.x - this.startPoint.x,\n      this.endPoint.y - this.startPoint.y,\n    )\n  }\n\n  onMouseMove = (e) => {\n    e.preventDefault();\n    const { x, y } = this.getCanvasCoords(e)\n    if (this.state.down) {\n      this.endPoint = {x, y}\n    }\n  }\n\n  getCanvasCoords = (e) => {\n    const {x: canvasX, y: canvasY} = getClientCoords(e);\n    const x = canvasX - e.target.offsetLeft\n    const y = canvasY - e.target.offsetTop\n    return {x, y}\n  }\n\n  update() {\n    if (this.state.down) {\n      this.canvasContext.strokeStyle = 'red'\n      this.canvasContext.beginPath()\n      this.canvasContext.moveTo(this.startPoint.x, this.startPoint.y)\n      this.canvasContext.lineTo(this.endPoint.x, this.endPoint.y)\n      this.canvasContext.stroke();\n    }\n  }\n}","export class Particle {\n  constructor({\n    startPosition\n  }){\n    this.position = { ...startPosition}\n    this.force = {\n      x: 0,\n      y: 0,\n    }\n    this.acceleration = {\n      x: 0,\n      y: 0,\n    }\n    this.velocity = {\n      x: 0,\n      y: 0,\n    }\n\n    this.mass = 0.1\n\n    this.seeds = [ Math.random(), Math.random(), Math.random(), Math.random(), Math.random() ]\n\n    this.config = {\n      lifespan: 500,\n      autonomy: 1,\n      size: 5,\n    }\n\n\n    this.life = 0\n\n    this._onDelete = () => {}\n  }\n\n  setContext(context){\n    this.context = context\n  }\n\n  setGravity(gravity){\n    this.force.y = gravity\n  }\n\n  setWind(wind){\n    this.force.x = wind\n  }\n\n  setConfig(config){\n    this.config = config\n  }\n\n  getWobble(seed = 0){\n    // wobbles\n    const radian = Math.PI / 180\n    const lifeRadians = (this.life) * radian * this.seeds[seed] // add random so it appears at a random place in the sine curve\n    const horizontalMult = 0.5 * this.seeds[seed]\n    const sinMult = 10 * this.seeds[seed]\n    return (horizontalMult * Math.sin(lifeRadians * sinMult))\n  }\n\n  onDelete = (func) => {\n    this._onDelete = func\n  }\n\n  destroy(){\n    this._onDelete(this)\n    delete this\n  }\n\n  update(timestamp){\n    this.life += 1\n    this.lastTime = timestamp\n    \n    // todo: only update this if changed from last tick\n    this.acceleration = {\n      x: this.force.x * this.mass,\n      y: this.force.y * this.mass,\n    }\n\n    for (let i  = 0; i < this.config.autonomy; i++) {\n      let dimension = i % 2 === 0 ? 'x' : 'y'\n      this.position[dimension] += (this.getWobble(i) * (this.config.autonomy + 1))\n    }\n    // this.acceleration.x += this.getWob\n    // gravity-based\n    \n    this.velocity = {\n      x: this.life * this.acceleration.x,\n      y: this.life * this.acceleration.y\n    }\n    \n\n    this.position.x += this.velocity.x\n    this.position.y += this.velocity.y\n\n\n    // draw\n    // this.context.fillStyle = 'black'\n    if (this.config.lifespan < Infinity) {\n      const opacity = Math.max((this.config.lifespan - this.life) / this.config.lifespan, 0)\n      this.context.fillStyle = `rgba(0, 0, 0, ${opacity})`\n    }\n    else {\n      this.context.fillStyle = `rgba(0, 0, 0, 1)`\n    }\n    const width = this.config.size * this.seeds[0]\n\n    this.context.beginPath();\n    this.context.arc(this.position.x, -this.position.y, width, 0, 2 * Math.PI, false);\n    this.context.fill();\n    const canvas = this.context.canvas\n    \n    // reset when OOB\n    if (this.life >= this.config.lifespan) {\n      this.destroy()\n    }\n    if (this.force.y < 0) {\n      if (this.position.y <= -canvas.height) {\n        this.destroy()\n      }\n    }\n    else if (this.force.y > 0) {\n      if (this.position.y >= 0) {\n        this.destroy()\n      }\n    }\n    if (this.force.x >= 0) {\n      if (this.position.x >= canvas.width) {\n        this.position.x = 0\n      }\n    }\n    if (this.force.x < 0) {\n      if (this.position.x <= 0) {\n        this.position.x = canvas.width\n      }\n    }\n  }\n}","import Knob from \"./Knob\"\n\nexport const INITIAL_VALUES = {\n  lifespan: 1620,\n  autonomy: 1,\n  size: 3,\n  intensity: 100,\n  gravity: 0.1,\n  wind: 0.1,\n}\n\nexport const init = (fieldInstance) => {\n  const lifespan = new Knob({\n    notches: 16,\n    min: 100,\n    max: 2000,\n    selector: document.getElementById('knob-1')\n  })\n  .setValue(INITIAL_VALUES.lifespan)\n  .onChange(val => {\n    let _val = Math.round(val)\n    fieldInstance.setConfig({\n      lifespan: _val === 2000 ? Infinity : _val\n    })\n  })\n  const autonomy = new Knob({\n    notches: 6,\n    min: 0,\n    max: 5,\n    selector: document.getElementById('knob-2')\n  })\n  .setValue(INITIAL_VALUES.autonomy)\n  .onChange(val => {\n    fieldInstance.setConfig({\n      autonomy: Math.round(val)\n    })\n  })\n  const size = new Knob({\n    notches: 8,\n    min: 2,\n    max: 9,\n    selector: document.getElementById('knob-3')\n  })\n  .setValue(INITIAL_VALUES.size)\n  .onChange(val => {\n    fieldInstance.setConfig({\n      size: Math.round(val)\n    })\n  })\n  const intensity = new Knob({\n    notches: 16,\n    min: 0,\n    max: 100,\n    selector: document.getElementById('knob-4')\n  })\n  .setValue(INITIAL_VALUES.intensity)\n  .onChange(val => {\n    fieldInstance.setConfig({\n      intensity: Math.round(val)\n    })\n  })\n}","import { Particle } from \"./Particle\"\nimport { INITIAL_VALUES } from \"./UI\"\n\nexport class Field {\n  constructor(){\n    this.canvas = document.createElement('canvas')\n    this.canvas.width = window.innerWidth * window.devicePixelRatio;\n    this.canvas.height = (window.innerHeight - document.getElementById('hud').getBoundingClientRect().height) * window.devicePixelRatio\n    this.context = this.canvas.getContext('2d')\n    this.context.scale(window.devicePixelRatio, window.devicePixelRatio)\n    this.particles = new Set()\n    document.body.appendChild(this.canvas)\n\n    this.gravity = INITIAL_VALUES.gravity\n    this.wind = INITIAL_VALUES.wind\n    \n    this.particleConfig = { ...INITIAL_VALUES }\n\n    this.emitting = false\n\n  }\n\n  update(timestamp){\n    this.context.clearRect(0, 0, this.canvas.width, this.canvas.height)\n    this.particles.forEach(particle => particle.update(timestamp))\n  }\n\n  setConfig = (keyVal) => {\n    this.particleConfig = {\n      ...this.particleConfig,\n      ...keyVal,\n    }\n    this.particles.forEach(particle => particle.setConfig(this.particleConfig))\n  }\n\n  updateForces(x, y){\n    const divisor = 1000\n    this.gravity = -y / divisor\n    this.wind = x / divisor\n    this.particles.forEach(particle => {\n      particle.setGravity(this.gravity)\n      particle.setWind(this.wind)\n    })\n\n    if (this.gravity === 0) {\n      this.stop()\n    } else if (!this.emitting) {\n      this.start()\n    }\n  }\n\n  addParticle(particle) {\n    particle.setContext(this.context)\n    particle.setGravity(this.gravity)\n    particle.setWind(this.wind)\n    particle.setConfig(this.particleConfig)\n    this.particles.add(particle)\n    particle.onDelete(particle => {\n      this.particles.delete(particle)\n    })\n  }\n\n  start(){\n    const startParticles = () => {\n      this.addParticle(new Particle({\n        startPosition: {\n          x: Math.random() * this.canvas.width,\n          y: this.gravity < 0 ? 1 : -(this.canvas.height - this.particleConfig.size)\n        }\n      }))\n      const interval = 100 - this.particleConfig.intensity\n      this.timeout = setTimeout(startParticles, interval)\n    }\n\n    startParticles()\n    this.emitting = true\n  }\n\n  onResize = () => {\n    this.canvas.width = window.innerWidth\n    this.canvas.height = window.innerHeight - document.getElementById('hud').getBoundingClientRect().height\n  }\n\n  stop(){\n    this.emitting = false\n    clearTimeout(this.timeout)\n  }\n}","/*\n  get gravity/wind into one config called forces\n  color?\n  blur?\n  animated favicon?\n  // embed + colors\n*/\n\nimport { DrawForceController } from \"./draw-force\"\nimport { Field } from \"./Field\"\nimport { init } from \"./UI\"\n\n\nconst field = new Field()\nconst drawController = new DrawForceController(field.context)\n\ndrawController.onChange((x, y) => {\n  field.updateForces(x, y)\n})\n\nfield.start()\n\nconst debounce = (func) => {\n  let timer\n  return (...args) => {\n    clearTimeout(timer)\n    timer = setTimeout(() => func(...args), 300)\n  }\n}\n\nwindow.addEventListener('resize', debounce(field.onResize))\n\nconst loop = (timestamp) => {\n  field.update(timestamp)\n  drawController.update()\n  requestAnimationFrame(loop)\n}\n\ninit(field)\n\nloop()\n\n"]}